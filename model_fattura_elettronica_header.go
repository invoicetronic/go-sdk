/*
Italian eInvoice API

The Italian eInvoice API is a RESTful API that allows you to send and receive invoices through the Italian [Servizio di Interscambio (SDI)][1], or Interchange Service. The API is designed by Invoicetronic to be simple and easy to use, abstracting away SDI complexity while still providing complete control over the invoice send/receive process. The API also provides advanced features and a rich toolchain, such as invoice validation, multiple upload methods, webhooks, event logs, CORS support, client SDKs for commonly used languages, and CLI tools.  For more information, see  [Invoicetronic website][2]  [1]: https://www.fatturapa.gov.it/it/sistemainterscambio/cose-il-sdi/ [2]: https://invoicetronic.com/

API version: 1.0.0
Contact: support@invoicetronic.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package invoicesdk

import (
	"encoding/json"
)

// checks if the FatturaElettronicaHeader type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FatturaElettronicaHeader{}

// FatturaElettronicaHeader struct for FatturaElettronicaHeader
type FatturaElettronicaHeader struct {
	DatiTrasmissione *DatiTrasmissione `json:"dati_trasmissione,omitempty"`
	CedentePrestatore *CedentePrestatore `json:"cedente_prestatore,omitempty"`
	RappresentanteFiscale *RappresentanteFiscale `json:"RappresentanteFiscale,omitempty"`
	CessionarioCommittente *CessionarioCommittente `json:"cessionario_committente,omitempty"`
	TerzoIntermediarioOSoggettoEmittente *TerzoIntermediarioOSoggettoEmittente `json:"terzo_intermediario_o_soggetto_emittente,omitempty"`
	SoggettoEmittente NullableString `json:"soggetto_emittente,omitempty"`
}

// NewFatturaElettronicaHeader instantiates a new FatturaElettronicaHeader object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFatturaElettronicaHeader() *FatturaElettronicaHeader {
	this := FatturaElettronicaHeader{}
	return &this
}

// NewFatturaElettronicaHeaderWithDefaults instantiates a new FatturaElettronicaHeader object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFatturaElettronicaHeaderWithDefaults() *FatturaElettronicaHeader {
	this := FatturaElettronicaHeader{}
	return &this
}

// GetDatiTrasmissione returns the DatiTrasmissione field value if set, zero value otherwise.
func (o *FatturaElettronicaHeader) GetDatiTrasmissione() DatiTrasmissione {
	if o == nil || IsNil(o.DatiTrasmissione) {
		var ret DatiTrasmissione
		return ret
	}
	return *o.DatiTrasmissione
}

// GetDatiTrasmissioneOk returns a tuple with the DatiTrasmissione field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FatturaElettronicaHeader) GetDatiTrasmissioneOk() (*DatiTrasmissione, bool) {
	if o == nil || IsNil(o.DatiTrasmissione) {
		return nil, false
	}
	return o.DatiTrasmissione, true
}

// HasDatiTrasmissione returns a boolean if a field has been set.
func (o *FatturaElettronicaHeader) HasDatiTrasmissione() bool {
	if o != nil && !IsNil(o.DatiTrasmissione) {
		return true
	}

	return false
}

// SetDatiTrasmissione gets a reference to the given DatiTrasmissione and assigns it to the DatiTrasmissione field.
func (o *FatturaElettronicaHeader) SetDatiTrasmissione(v DatiTrasmissione) {
	o.DatiTrasmissione = &v
}

// GetCedentePrestatore returns the CedentePrestatore field value if set, zero value otherwise.
func (o *FatturaElettronicaHeader) GetCedentePrestatore() CedentePrestatore {
	if o == nil || IsNil(o.CedentePrestatore) {
		var ret CedentePrestatore
		return ret
	}
	return *o.CedentePrestatore
}

// GetCedentePrestatoreOk returns a tuple with the CedentePrestatore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FatturaElettronicaHeader) GetCedentePrestatoreOk() (*CedentePrestatore, bool) {
	if o == nil || IsNil(o.CedentePrestatore) {
		return nil, false
	}
	return o.CedentePrestatore, true
}

// HasCedentePrestatore returns a boolean if a field has been set.
func (o *FatturaElettronicaHeader) HasCedentePrestatore() bool {
	if o != nil && !IsNil(o.CedentePrestatore) {
		return true
	}

	return false
}

// SetCedentePrestatore gets a reference to the given CedentePrestatore and assigns it to the CedentePrestatore field.
func (o *FatturaElettronicaHeader) SetCedentePrestatore(v CedentePrestatore) {
	o.CedentePrestatore = &v
}

// GetRappresentanteFiscale returns the RappresentanteFiscale field value if set, zero value otherwise.
func (o *FatturaElettronicaHeader) GetRappresentanteFiscale() RappresentanteFiscale {
	if o == nil || IsNil(o.RappresentanteFiscale) {
		var ret RappresentanteFiscale
		return ret
	}
	return *o.RappresentanteFiscale
}

// GetRappresentanteFiscaleOk returns a tuple with the RappresentanteFiscale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FatturaElettronicaHeader) GetRappresentanteFiscaleOk() (*RappresentanteFiscale, bool) {
	if o == nil || IsNil(o.RappresentanteFiscale) {
		return nil, false
	}
	return o.RappresentanteFiscale, true
}

// HasRappresentanteFiscale returns a boolean if a field has been set.
func (o *FatturaElettronicaHeader) HasRappresentanteFiscale() bool {
	if o != nil && !IsNil(o.RappresentanteFiscale) {
		return true
	}

	return false
}

// SetRappresentanteFiscale gets a reference to the given RappresentanteFiscale and assigns it to the RappresentanteFiscale field.
func (o *FatturaElettronicaHeader) SetRappresentanteFiscale(v RappresentanteFiscale) {
	o.RappresentanteFiscale = &v
}

// GetCessionarioCommittente returns the CessionarioCommittente field value if set, zero value otherwise.
func (o *FatturaElettronicaHeader) GetCessionarioCommittente() CessionarioCommittente {
	if o == nil || IsNil(o.CessionarioCommittente) {
		var ret CessionarioCommittente
		return ret
	}
	return *o.CessionarioCommittente
}

// GetCessionarioCommittenteOk returns a tuple with the CessionarioCommittente field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FatturaElettronicaHeader) GetCessionarioCommittenteOk() (*CessionarioCommittente, bool) {
	if o == nil || IsNil(o.CessionarioCommittente) {
		return nil, false
	}
	return o.CessionarioCommittente, true
}

// HasCessionarioCommittente returns a boolean if a field has been set.
func (o *FatturaElettronicaHeader) HasCessionarioCommittente() bool {
	if o != nil && !IsNil(o.CessionarioCommittente) {
		return true
	}

	return false
}

// SetCessionarioCommittente gets a reference to the given CessionarioCommittente and assigns it to the CessionarioCommittente field.
func (o *FatturaElettronicaHeader) SetCessionarioCommittente(v CessionarioCommittente) {
	o.CessionarioCommittente = &v
}

// GetTerzoIntermediarioOSoggettoEmittente returns the TerzoIntermediarioOSoggettoEmittente field value if set, zero value otherwise.
func (o *FatturaElettronicaHeader) GetTerzoIntermediarioOSoggettoEmittente() TerzoIntermediarioOSoggettoEmittente {
	if o == nil || IsNil(o.TerzoIntermediarioOSoggettoEmittente) {
		var ret TerzoIntermediarioOSoggettoEmittente
		return ret
	}
	return *o.TerzoIntermediarioOSoggettoEmittente
}

// GetTerzoIntermediarioOSoggettoEmittenteOk returns a tuple with the TerzoIntermediarioOSoggettoEmittente field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FatturaElettronicaHeader) GetTerzoIntermediarioOSoggettoEmittenteOk() (*TerzoIntermediarioOSoggettoEmittente, bool) {
	if o == nil || IsNil(o.TerzoIntermediarioOSoggettoEmittente) {
		return nil, false
	}
	return o.TerzoIntermediarioOSoggettoEmittente, true
}

// HasTerzoIntermediarioOSoggettoEmittente returns a boolean if a field has been set.
func (o *FatturaElettronicaHeader) HasTerzoIntermediarioOSoggettoEmittente() bool {
	if o != nil && !IsNil(o.TerzoIntermediarioOSoggettoEmittente) {
		return true
	}

	return false
}

// SetTerzoIntermediarioOSoggettoEmittente gets a reference to the given TerzoIntermediarioOSoggettoEmittente and assigns it to the TerzoIntermediarioOSoggettoEmittente field.
func (o *FatturaElettronicaHeader) SetTerzoIntermediarioOSoggettoEmittente(v TerzoIntermediarioOSoggettoEmittente) {
	o.TerzoIntermediarioOSoggettoEmittente = &v
}

// GetSoggettoEmittente returns the SoggettoEmittente field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FatturaElettronicaHeader) GetSoggettoEmittente() string {
	if o == nil || IsNil(o.SoggettoEmittente.Get()) {
		var ret string
		return ret
	}
	return *o.SoggettoEmittente.Get()
}

// GetSoggettoEmittenteOk returns a tuple with the SoggettoEmittente field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FatturaElettronicaHeader) GetSoggettoEmittenteOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SoggettoEmittente.Get(), o.SoggettoEmittente.IsSet()
}

// HasSoggettoEmittente returns a boolean if a field has been set.
func (o *FatturaElettronicaHeader) HasSoggettoEmittente() bool {
	if o != nil && o.SoggettoEmittente.IsSet() {
		return true
	}

	return false
}

// SetSoggettoEmittente gets a reference to the given NullableString and assigns it to the SoggettoEmittente field.
func (o *FatturaElettronicaHeader) SetSoggettoEmittente(v string) {
	o.SoggettoEmittente.Set(&v)
}
// SetSoggettoEmittenteNil sets the value for SoggettoEmittente to be an explicit nil
func (o *FatturaElettronicaHeader) SetSoggettoEmittenteNil() {
	o.SoggettoEmittente.Set(nil)
}

// UnsetSoggettoEmittente ensures that no value is present for SoggettoEmittente, not even an explicit nil
func (o *FatturaElettronicaHeader) UnsetSoggettoEmittente() {
	o.SoggettoEmittente.Unset()
}

func (o FatturaElettronicaHeader) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FatturaElettronicaHeader) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DatiTrasmissione) {
		toSerialize["dati_trasmissione"] = o.DatiTrasmissione
	}
	if !IsNil(o.CedentePrestatore) {
		toSerialize["cedente_prestatore"] = o.CedentePrestatore
	}
	if !IsNil(o.RappresentanteFiscale) {
		toSerialize["RappresentanteFiscale"] = o.RappresentanteFiscale
	}
	if !IsNil(o.CessionarioCommittente) {
		toSerialize["cessionario_committente"] = o.CessionarioCommittente
	}
	if !IsNil(o.TerzoIntermediarioOSoggettoEmittente) {
		toSerialize["terzo_intermediario_o_soggetto_emittente"] = o.TerzoIntermediarioOSoggettoEmittente
	}
	if o.SoggettoEmittente.IsSet() {
		toSerialize["soggetto_emittente"] = o.SoggettoEmittente.Get()
	}
	return toSerialize, nil
}

type NullableFatturaElettronicaHeader struct {
	value *FatturaElettronicaHeader
	isSet bool
}

func (v NullableFatturaElettronicaHeader) Get() *FatturaElettronicaHeader {
	return v.value
}

func (v *NullableFatturaElettronicaHeader) Set(val *FatturaElettronicaHeader) {
	v.value = val
	v.isSet = true
}

func (v NullableFatturaElettronicaHeader) IsSet() bool {
	return v.isSet
}

func (v *NullableFatturaElettronicaHeader) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFatturaElettronicaHeader(val *FatturaElettronicaHeader) *NullableFatturaElettronicaHeader {
	return &NullableFatturaElettronicaHeader{value: val, isSet: true}
}

func (v NullableFatturaElettronicaHeader) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFatturaElettronicaHeader) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


