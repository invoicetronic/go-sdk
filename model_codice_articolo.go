/*
Invoicetronic API

The [Invoicetronic API][2] is a RESTful service that allows you to send and receive invoices through the Italian [Servizio di Interscambio (SDI)][1], or Interchange Service. The API is designed to be simple and easy to use, abstracting away SDI complexity while providing complete control over the invoice send/receive process. It provides advanced features as encryption at rest, multi-language pre-flight invoice validation, multiple upload formats, webhooks, event logging, client SDKs, and CLI tools.  For more information, see  [Invoicetronic website][2]  [1]: https://www.fatturapa.gov.it/it/sistemainterscambio/cose-il-sdi/ [2]: https://invoicetronic.com/

API version: 1
Contact: support@invoicetronic.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package invoicetronicsdk

import (
	"encoding/json"
)

// checks if the CodiceArticolo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CodiceArticolo{}

// CodiceArticolo struct for CodiceArticolo
type CodiceArticolo struct {
	CodiceTipo NullableString `json:"codice_tipo,omitempty"`
	CodiceValore NullableString `json:"codice_valore,omitempty"`
}

// NewCodiceArticolo instantiates a new CodiceArticolo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCodiceArticolo() *CodiceArticolo {
	this := CodiceArticolo{}
	return &this
}

// NewCodiceArticoloWithDefaults instantiates a new CodiceArticolo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCodiceArticoloWithDefaults() *CodiceArticolo {
	this := CodiceArticolo{}
	return &this
}

// GetCodiceTipo returns the CodiceTipo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CodiceArticolo) GetCodiceTipo() string {
	if o == nil || IsNil(o.CodiceTipo.Get()) {
		var ret string
		return ret
	}
	return *o.CodiceTipo.Get()
}

// GetCodiceTipoOk returns a tuple with the CodiceTipo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CodiceArticolo) GetCodiceTipoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CodiceTipo.Get(), o.CodiceTipo.IsSet()
}

// HasCodiceTipo returns a boolean if a field has been set.
func (o *CodiceArticolo) HasCodiceTipo() bool {
	if o != nil && o.CodiceTipo.IsSet() {
		return true
	}

	return false
}

// SetCodiceTipo gets a reference to the given NullableString and assigns it to the CodiceTipo field.
func (o *CodiceArticolo) SetCodiceTipo(v string) {
	o.CodiceTipo.Set(&v)
}
// SetCodiceTipoNil sets the value for CodiceTipo to be an explicit nil
func (o *CodiceArticolo) SetCodiceTipoNil() {
	o.CodiceTipo.Set(nil)
}

// UnsetCodiceTipo ensures that no value is present for CodiceTipo, not even an explicit nil
func (o *CodiceArticolo) UnsetCodiceTipo() {
	o.CodiceTipo.Unset()
}

// GetCodiceValore returns the CodiceValore field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CodiceArticolo) GetCodiceValore() string {
	if o == nil || IsNil(o.CodiceValore.Get()) {
		var ret string
		return ret
	}
	return *o.CodiceValore.Get()
}

// GetCodiceValoreOk returns a tuple with the CodiceValore field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CodiceArticolo) GetCodiceValoreOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CodiceValore.Get(), o.CodiceValore.IsSet()
}

// HasCodiceValore returns a boolean if a field has been set.
func (o *CodiceArticolo) HasCodiceValore() bool {
	if o != nil && o.CodiceValore.IsSet() {
		return true
	}

	return false
}

// SetCodiceValore gets a reference to the given NullableString and assigns it to the CodiceValore field.
func (o *CodiceArticolo) SetCodiceValore(v string) {
	o.CodiceValore.Set(&v)
}
// SetCodiceValoreNil sets the value for CodiceValore to be an explicit nil
func (o *CodiceArticolo) SetCodiceValoreNil() {
	o.CodiceValore.Set(nil)
}

// UnsetCodiceValore ensures that no value is present for CodiceValore, not even an explicit nil
func (o *CodiceArticolo) UnsetCodiceValore() {
	o.CodiceValore.Unset()
}

func (o CodiceArticolo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CodiceArticolo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.CodiceTipo.IsSet() {
		toSerialize["codice_tipo"] = o.CodiceTipo.Get()
	}
	if o.CodiceValore.IsSet() {
		toSerialize["codice_valore"] = o.CodiceValore.Get()
	}
	return toSerialize, nil
}

type NullableCodiceArticolo struct {
	value *CodiceArticolo
	isSet bool
}

func (v NullableCodiceArticolo) Get() *CodiceArticolo {
	return v.value
}

func (v *NullableCodiceArticolo) Set(val *CodiceArticolo) {
	v.value = val
	v.isSet = true
}

func (v NullableCodiceArticolo) IsSet() bool {
	return v.isSet
}

func (v *NullableCodiceArticolo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCodiceArticolo(val *CodiceArticolo) *NullableCodiceArticolo {
	return &NullableCodiceArticolo{value: val, isSet: true}
}

func (v NullableCodiceArticolo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCodiceArticolo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


