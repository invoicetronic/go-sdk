/*
Italian eInvoice API

The Italian eInvoice API is a RESTful API that allows you to send and receive invoices through the Italian [Servizio di Interscambio (SDI)][1], or Interchange Service. The API is designed by Invoicetronic to be simple and easy to use, abstracting away SDI complexity while still providing complete control over the invoice send/receive process. The API also provides advanced features and a rich toolchain, such as invoice validation, multiple upload methods, webhooks, event logs, CORS support, client SDKs for commonly used languages, and CLI tools.  For more information, see  [Invoicetronic website][2]  [1]: https://www.fatturapa.gov.it/it/sistemainterscambio/cose-il-sdi/ [2]: https://invoicetronic.com/

API version: 1.0.0
Contact: support@invoicetronic.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package invoicesdk

import (
	"encoding/json"
)

// checks if the DatiBeniServizi type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DatiBeniServizi{}

// DatiBeniServizi struct for DatiBeniServizi
type DatiBeniServizi struct {
	DettaglioLinee []DettaglioLinee `json:"dettaglio_linee,omitempty"`
	DatiRiepilogo []DatiRiepilogo `json:"dati_riepilogo,omitempty"`
}

// NewDatiBeniServizi instantiates a new DatiBeniServizi object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDatiBeniServizi() *DatiBeniServizi {
	this := DatiBeniServizi{}
	return &this
}

// NewDatiBeniServiziWithDefaults instantiates a new DatiBeniServizi object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDatiBeniServiziWithDefaults() *DatiBeniServizi {
	this := DatiBeniServizi{}
	return &this
}

// GetDettaglioLinee returns the DettaglioLinee field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DatiBeniServizi) GetDettaglioLinee() []DettaglioLinee {
	if o == nil {
		var ret []DettaglioLinee
		return ret
	}
	return o.DettaglioLinee
}

// GetDettaglioLineeOk returns a tuple with the DettaglioLinee field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DatiBeniServizi) GetDettaglioLineeOk() ([]DettaglioLinee, bool) {
	if o == nil || IsNil(o.DettaglioLinee) {
		return nil, false
	}
	return o.DettaglioLinee, true
}

// HasDettaglioLinee returns a boolean if a field has been set.
func (o *DatiBeniServizi) HasDettaglioLinee() bool {
	if o != nil && !IsNil(o.DettaglioLinee) {
		return true
	}

	return false
}

// SetDettaglioLinee gets a reference to the given []DettaglioLinee and assigns it to the DettaglioLinee field.
func (o *DatiBeniServizi) SetDettaglioLinee(v []DettaglioLinee) {
	o.DettaglioLinee = v
}

// GetDatiRiepilogo returns the DatiRiepilogo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DatiBeniServizi) GetDatiRiepilogo() []DatiRiepilogo {
	if o == nil {
		var ret []DatiRiepilogo
		return ret
	}
	return o.DatiRiepilogo
}

// GetDatiRiepilogoOk returns a tuple with the DatiRiepilogo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DatiBeniServizi) GetDatiRiepilogoOk() ([]DatiRiepilogo, bool) {
	if o == nil || IsNil(o.DatiRiepilogo) {
		return nil, false
	}
	return o.DatiRiepilogo, true
}

// HasDatiRiepilogo returns a boolean if a field has been set.
func (o *DatiBeniServizi) HasDatiRiepilogo() bool {
	if o != nil && !IsNil(o.DatiRiepilogo) {
		return true
	}

	return false
}

// SetDatiRiepilogo gets a reference to the given []DatiRiepilogo and assigns it to the DatiRiepilogo field.
func (o *DatiBeniServizi) SetDatiRiepilogo(v []DatiRiepilogo) {
	o.DatiRiepilogo = v
}

func (o DatiBeniServizi) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DatiBeniServizi) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.DettaglioLinee != nil {
		toSerialize["dettaglio_linee"] = o.DettaglioLinee
	}
	if o.DatiRiepilogo != nil {
		toSerialize["dati_riepilogo"] = o.DatiRiepilogo
	}
	return toSerialize, nil
}

type NullableDatiBeniServizi struct {
	value *DatiBeniServizi
	isSet bool
}

func (v NullableDatiBeniServizi) Get() *DatiBeniServizi {
	return v.value
}

func (v *NullableDatiBeniServizi) Set(val *DatiBeniServizi) {
	v.value = val
	v.isSet = true
}

func (v NullableDatiBeniServizi) IsSet() bool {
	return v.isSet
}

func (v *NullableDatiBeniServizi) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDatiBeniServizi(val *DatiBeniServizi) *NullableDatiBeniServizi {
	return &NullableDatiBeniServizi{value: val, isSet: true}
}

func (v NullableDatiBeniServizi) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDatiBeniServizi) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


