/*
Italian eInvoice API

The Italian eInvoice API is a RESTful API that allows you to send and receive invoices through the Italian [Servizio di Interscambio (SDI)][1], or Interchange Service. The API is designed by Invoicetronic to be simple and easy to use, abstracting away SDI complexity while providing complete control over the invoice send/receive process. The API also provides advanced features as encryption at rest, invoice validation, multiple upload formats, webhooks, event logging, client SDKs for commonly used languages, and CLI tools.  For more information, see  [Invoicetronic website][2]  [1]: https://www.fatturapa.gov.it/it/sistemainterscambio/cose-il-sdi/ [2]: https://invoicetronic.com/

API version: 1.0.0
Contact: support@invoicetronic.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package invoicesdk

import (
	"encoding/json"
)

// checks if the FatturaOrdinaria type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FatturaOrdinaria{}

// FatturaOrdinaria struct for FatturaOrdinaria
type FatturaOrdinaria struct {
	SistemaEmittente NullableString `json:"sistema_emittente,omitempty"`
	FatturaElettronicaHeader *FatturaElettronicaHeader `json:"fattura_elettronica_header,omitempty"`
	FatturaElettronicaBody []FatturaElettronicaBody `json:"fattura_elettronica_body,omitempty"`
}

// NewFatturaOrdinaria instantiates a new FatturaOrdinaria object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFatturaOrdinaria() *FatturaOrdinaria {
	this := FatturaOrdinaria{}
	return &this
}

// NewFatturaOrdinariaWithDefaults instantiates a new FatturaOrdinaria object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFatturaOrdinariaWithDefaults() *FatturaOrdinaria {
	this := FatturaOrdinaria{}
	return &this
}

// GetSistemaEmittente returns the SistemaEmittente field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FatturaOrdinaria) GetSistemaEmittente() string {
	if o == nil || IsNil(o.SistemaEmittente.Get()) {
		var ret string
		return ret
	}
	return *o.SistemaEmittente.Get()
}

// GetSistemaEmittenteOk returns a tuple with the SistemaEmittente field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FatturaOrdinaria) GetSistemaEmittenteOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SistemaEmittente.Get(), o.SistemaEmittente.IsSet()
}

// HasSistemaEmittente returns a boolean if a field has been set.
func (o *FatturaOrdinaria) HasSistemaEmittente() bool {
	if o != nil && o.SistemaEmittente.IsSet() {
		return true
	}

	return false
}

// SetSistemaEmittente gets a reference to the given NullableString and assigns it to the SistemaEmittente field.
func (o *FatturaOrdinaria) SetSistemaEmittente(v string) {
	o.SistemaEmittente.Set(&v)
}
// SetSistemaEmittenteNil sets the value for SistemaEmittente to be an explicit nil
func (o *FatturaOrdinaria) SetSistemaEmittenteNil() {
	o.SistemaEmittente.Set(nil)
}

// UnsetSistemaEmittente ensures that no value is present for SistemaEmittente, not even an explicit nil
func (o *FatturaOrdinaria) UnsetSistemaEmittente() {
	o.SistemaEmittente.Unset()
}

// GetFatturaElettronicaHeader returns the FatturaElettronicaHeader field value if set, zero value otherwise.
func (o *FatturaOrdinaria) GetFatturaElettronicaHeader() FatturaElettronicaHeader {
	if o == nil || IsNil(o.FatturaElettronicaHeader) {
		var ret FatturaElettronicaHeader
		return ret
	}
	return *o.FatturaElettronicaHeader
}

// GetFatturaElettronicaHeaderOk returns a tuple with the FatturaElettronicaHeader field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FatturaOrdinaria) GetFatturaElettronicaHeaderOk() (*FatturaElettronicaHeader, bool) {
	if o == nil || IsNil(o.FatturaElettronicaHeader) {
		return nil, false
	}
	return o.FatturaElettronicaHeader, true
}

// HasFatturaElettronicaHeader returns a boolean if a field has been set.
func (o *FatturaOrdinaria) HasFatturaElettronicaHeader() bool {
	if o != nil && !IsNil(o.FatturaElettronicaHeader) {
		return true
	}

	return false
}

// SetFatturaElettronicaHeader gets a reference to the given FatturaElettronicaHeader and assigns it to the FatturaElettronicaHeader field.
func (o *FatturaOrdinaria) SetFatturaElettronicaHeader(v FatturaElettronicaHeader) {
	o.FatturaElettronicaHeader = &v
}

// GetFatturaElettronicaBody returns the FatturaElettronicaBody field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FatturaOrdinaria) GetFatturaElettronicaBody() []FatturaElettronicaBody {
	if o == nil {
		var ret []FatturaElettronicaBody
		return ret
	}
	return o.FatturaElettronicaBody
}

// GetFatturaElettronicaBodyOk returns a tuple with the FatturaElettronicaBody field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FatturaOrdinaria) GetFatturaElettronicaBodyOk() ([]FatturaElettronicaBody, bool) {
	if o == nil || IsNil(o.FatturaElettronicaBody) {
		return nil, false
	}
	return o.FatturaElettronicaBody, true
}

// HasFatturaElettronicaBody returns a boolean if a field has been set.
func (o *FatturaOrdinaria) HasFatturaElettronicaBody() bool {
	if o != nil && !IsNil(o.FatturaElettronicaBody) {
		return true
	}

	return false
}

// SetFatturaElettronicaBody gets a reference to the given []FatturaElettronicaBody and assigns it to the FatturaElettronicaBody field.
func (o *FatturaOrdinaria) SetFatturaElettronicaBody(v []FatturaElettronicaBody) {
	o.FatturaElettronicaBody = v
}

func (o FatturaOrdinaria) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FatturaOrdinaria) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.SistemaEmittente.IsSet() {
		toSerialize["sistema_emittente"] = o.SistemaEmittente.Get()
	}
	if !IsNil(o.FatturaElettronicaHeader) {
		toSerialize["fattura_elettronica_header"] = o.FatturaElettronicaHeader
	}
	if o.FatturaElettronicaBody != nil {
		toSerialize["fattura_elettronica_body"] = o.FatturaElettronicaBody
	}
	return toSerialize, nil
}

type NullableFatturaOrdinaria struct {
	value *FatturaOrdinaria
	isSet bool
}

func (v NullableFatturaOrdinaria) Get() *FatturaOrdinaria {
	return v.value
}

func (v *NullableFatturaOrdinaria) Set(val *FatturaOrdinaria) {
	v.value = val
	v.isSet = true
}

func (v NullableFatturaOrdinaria) IsSet() bool {
	return v.isSet
}

func (v *NullableFatturaOrdinaria) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFatturaOrdinaria(val *FatturaOrdinaria) *NullableFatturaOrdinaria {
	return &NullableFatturaOrdinaria{value: val, isSet: true}
}

func (v NullableFatturaOrdinaria) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFatturaOrdinaria) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


