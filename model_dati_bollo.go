/*
Italian eInvoice API

The Italian eInvoice API is a RESTful API that allows you to send and receive invoices through the Italian [Servizio di Interscambio (SDI)][1], or Interchange Service. The API is designed by Invoicetronic to be simple and easy to use, abstracting away SDI complexity while providing complete control over the invoice send/receive process. The API also provides advanced features as encryption at rest, invoice validation, multiple upload formats, webhooks, event logging, client SDKs for commonly used languages, and CLI tools.  For more information, see  [Invoicetronic website][2]  [1]: https://www.fatturapa.gov.it/it/sistemainterscambio/cose-il-sdi/ [2]: https://invoicetronic.com/

API version: 1.0.0
Contact: support@invoicetronic.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package invoicesdk

import (
	"encoding/json"
)

// checks if the DatiBollo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DatiBollo{}

// DatiBollo struct for DatiBollo
type DatiBollo struct {
	BolloVirtuale NullableString `json:"bollo_virtuale,omitempty"`
	ImportoBollo NullableFloat64 `json:"importo_bollo,omitempty"`
}

// NewDatiBollo instantiates a new DatiBollo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDatiBollo() *DatiBollo {
	this := DatiBollo{}
	return &this
}

// NewDatiBolloWithDefaults instantiates a new DatiBollo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDatiBolloWithDefaults() *DatiBollo {
	this := DatiBollo{}
	return &this
}

// GetBolloVirtuale returns the BolloVirtuale field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DatiBollo) GetBolloVirtuale() string {
	if o == nil || IsNil(o.BolloVirtuale.Get()) {
		var ret string
		return ret
	}
	return *o.BolloVirtuale.Get()
}

// GetBolloVirtualeOk returns a tuple with the BolloVirtuale field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DatiBollo) GetBolloVirtualeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BolloVirtuale.Get(), o.BolloVirtuale.IsSet()
}

// HasBolloVirtuale returns a boolean if a field has been set.
func (o *DatiBollo) HasBolloVirtuale() bool {
	if o != nil && o.BolloVirtuale.IsSet() {
		return true
	}

	return false
}

// SetBolloVirtuale gets a reference to the given NullableString and assigns it to the BolloVirtuale field.
func (o *DatiBollo) SetBolloVirtuale(v string) {
	o.BolloVirtuale.Set(&v)
}
// SetBolloVirtualeNil sets the value for BolloVirtuale to be an explicit nil
func (o *DatiBollo) SetBolloVirtualeNil() {
	o.BolloVirtuale.Set(nil)
}

// UnsetBolloVirtuale ensures that no value is present for BolloVirtuale, not even an explicit nil
func (o *DatiBollo) UnsetBolloVirtuale() {
	o.BolloVirtuale.Unset()
}

// GetImportoBollo returns the ImportoBollo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DatiBollo) GetImportoBollo() float64 {
	if o == nil || IsNil(o.ImportoBollo.Get()) {
		var ret float64
		return ret
	}
	return *o.ImportoBollo.Get()
}

// GetImportoBolloOk returns a tuple with the ImportoBollo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DatiBollo) GetImportoBolloOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ImportoBollo.Get(), o.ImportoBollo.IsSet()
}

// HasImportoBollo returns a boolean if a field has been set.
func (o *DatiBollo) HasImportoBollo() bool {
	if o != nil && o.ImportoBollo.IsSet() {
		return true
	}

	return false
}

// SetImportoBollo gets a reference to the given NullableFloat64 and assigns it to the ImportoBollo field.
func (o *DatiBollo) SetImportoBollo(v float64) {
	o.ImportoBollo.Set(&v)
}
// SetImportoBolloNil sets the value for ImportoBollo to be an explicit nil
func (o *DatiBollo) SetImportoBolloNil() {
	o.ImportoBollo.Set(nil)
}

// UnsetImportoBollo ensures that no value is present for ImportoBollo, not even an explicit nil
func (o *DatiBollo) UnsetImportoBollo() {
	o.ImportoBollo.Unset()
}

func (o DatiBollo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DatiBollo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.BolloVirtuale.IsSet() {
		toSerialize["bollo_virtuale"] = o.BolloVirtuale.Get()
	}
	if o.ImportoBollo.IsSet() {
		toSerialize["importo_bollo"] = o.ImportoBollo.Get()
	}
	return toSerialize, nil
}

type NullableDatiBollo struct {
	value *DatiBollo
	isSet bool
}

func (v NullableDatiBollo) Get() *DatiBollo {
	return v.value
}

func (v *NullableDatiBollo) Set(val *DatiBollo) {
	v.value = val
	v.isSet = true
}

func (v NullableDatiBollo) IsSet() bool {
	return v.isSet
}

func (v *NullableDatiBollo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDatiBollo(val *DatiBollo) *NullableDatiBollo {
	return &NullableDatiBollo{value: val, isSet: true}
}

func (v NullableDatiBollo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDatiBollo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


