/*
Italian eInvoice API v1

The [Italian eInvoice API][2] is a RESTful API that allows you to send and receive invoices through the Italian [Servizio di Interscambio (SDI)][1], or Interchange Service. The API is designed by Invoicetronic to be simple and easy to use, abstracting away SDI complexity while providing complete control over the invoice send/receive process. The API also provides advanced features as encryption at rest, invoice validation, multiple upload formats, webhooks, event logging, client SDKs for commonly used languages, and CLI tools.  For more information, see  [Invoicetronic website][2]  [1]: https://www.fatturapa.gov.it/it/sistemainterscambio/cose-il-sdi/ [2]: https://invoicetronic.com/

API version: 1
Contact: support@invoicetronic.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package invoicesdk

import (
	"encoding/json"
)

// checks if the TerzoIntermediarioOSoggettoEmittente type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TerzoIntermediarioOSoggettoEmittente{}

// TerzoIntermediarioOSoggettoEmittente struct for TerzoIntermediarioOSoggettoEmittente
type TerzoIntermediarioOSoggettoEmittente struct {
	DatiAnagrafici *DatiAnagrafici `json:"dati_anagrafici,omitempty"`
}

// NewTerzoIntermediarioOSoggettoEmittente instantiates a new TerzoIntermediarioOSoggettoEmittente object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTerzoIntermediarioOSoggettoEmittente() *TerzoIntermediarioOSoggettoEmittente {
	this := TerzoIntermediarioOSoggettoEmittente{}
	return &this
}

// NewTerzoIntermediarioOSoggettoEmittenteWithDefaults instantiates a new TerzoIntermediarioOSoggettoEmittente object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTerzoIntermediarioOSoggettoEmittenteWithDefaults() *TerzoIntermediarioOSoggettoEmittente {
	this := TerzoIntermediarioOSoggettoEmittente{}
	return &this
}

// GetDatiAnagrafici returns the DatiAnagrafici field value if set, zero value otherwise.
func (o *TerzoIntermediarioOSoggettoEmittente) GetDatiAnagrafici() DatiAnagrafici {
	if o == nil || IsNil(o.DatiAnagrafici) {
		var ret DatiAnagrafici
		return ret
	}
	return *o.DatiAnagrafici
}

// GetDatiAnagraficiOk returns a tuple with the DatiAnagrafici field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TerzoIntermediarioOSoggettoEmittente) GetDatiAnagraficiOk() (*DatiAnagrafici, bool) {
	if o == nil || IsNil(o.DatiAnagrafici) {
		return nil, false
	}
	return o.DatiAnagrafici, true
}

// HasDatiAnagrafici returns a boolean if a field has been set.
func (o *TerzoIntermediarioOSoggettoEmittente) HasDatiAnagrafici() bool {
	if o != nil && !IsNil(o.DatiAnagrafici) {
		return true
	}

	return false
}

// SetDatiAnagrafici gets a reference to the given DatiAnagrafici and assigns it to the DatiAnagrafici field.
func (o *TerzoIntermediarioOSoggettoEmittente) SetDatiAnagrafici(v DatiAnagrafici) {
	o.DatiAnagrafici = &v
}

func (o TerzoIntermediarioOSoggettoEmittente) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TerzoIntermediarioOSoggettoEmittente) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DatiAnagrafici) {
		toSerialize["dati_anagrafici"] = o.DatiAnagrafici
	}
	return toSerialize, nil
}

type NullableTerzoIntermediarioOSoggettoEmittente struct {
	value *TerzoIntermediarioOSoggettoEmittente
	isSet bool
}

func (v NullableTerzoIntermediarioOSoggettoEmittente) Get() *TerzoIntermediarioOSoggettoEmittente {
	return v.value
}

func (v *NullableTerzoIntermediarioOSoggettoEmittente) Set(val *TerzoIntermediarioOSoggettoEmittente) {
	v.value = val
	v.isSet = true
}

func (v NullableTerzoIntermediarioOSoggettoEmittente) IsSet() bool {
	return v.isSet
}

func (v *NullableTerzoIntermediarioOSoggettoEmittente) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTerzoIntermediarioOSoggettoEmittente(val *TerzoIntermediarioOSoggettoEmittente) *NullableTerzoIntermediarioOSoggettoEmittente {
	return &NullableTerzoIntermediarioOSoggettoEmittente{value: val, isSet: true}
}

func (v NullableTerzoIntermediarioOSoggettoEmittente) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTerzoIntermediarioOSoggettoEmittente) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


