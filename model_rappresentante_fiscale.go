/*
Invoicetronic API

The [Invoicetronic API][2] is a RESTful service that allows you to send and receive invoices through the Italian [Servizio di Interscambio (SDI)][1], or Interchange Service. The API is designed to be simple and easy to use, abstracting away SDI complexity while providing complete control over the invoice send/receive process. It provides advanced features as encryption at rest, multi-language pre-flight invoice validation, multiple upload formats, webhooks, event logging, client SDKs, and CLI tools.  For more information, see  [Invoicetronic website][2]  [1]: https://www.fatturapa.gov.it/it/sistemainterscambio/cose-il-sdi/ [2]: https://invoicetronic.com/

API version: 1
Contact: support@invoicetronic.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package invoicetronicsdk

import (
	"encoding/json"
)

// checks if the RappresentanteFiscale type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RappresentanteFiscale{}

// RappresentanteFiscale struct for RappresentanteFiscale
type RappresentanteFiscale struct {
	DatiAnagrafici *DatiAnagrafici `json:"dati_anagrafici,omitempty"`
}

// NewRappresentanteFiscale instantiates a new RappresentanteFiscale object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRappresentanteFiscale() *RappresentanteFiscale {
	this := RappresentanteFiscale{}
	return &this
}

// NewRappresentanteFiscaleWithDefaults instantiates a new RappresentanteFiscale object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRappresentanteFiscaleWithDefaults() *RappresentanteFiscale {
	this := RappresentanteFiscale{}
	return &this
}

// GetDatiAnagrafici returns the DatiAnagrafici field value if set, zero value otherwise.
func (o *RappresentanteFiscale) GetDatiAnagrafici() DatiAnagrafici {
	if o == nil || IsNil(o.DatiAnagrafici) {
		var ret DatiAnagrafici
		return ret
	}
	return *o.DatiAnagrafici
}

// GetDatiAnagraficiOk returns a tuple with the DatiAnagrafici field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RappresentanteFiscale) GetDatiAnagraficiOk() (*DatiAnagrafici, bool) {
	if o == nil || IsNil(o.DatiAnagrafici) {
		return nil, false
	}
	return o.DatiAnagrafici, true
}

// HasDatiAnagrafici returns a boolean if a field has been set.
func (o *RappresentanteFiscale) HasDatiAnagrafici() bool {
	if o != nil && !IsNil(o.DatiAnagrafici) {
		return true
	}

	return false
}

// SetDatiAnagrafici gets a reference to the given DatiAnagrafici and assigns it to the DatiAnagrafici field.
func (o *RappresentanteFiscale) SetDatiAnagrafici(v DatiAnagrafici) {
	o.DatiAnagrafici = &v
}

func (o RappresentanteFiscale) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RappresentanteFiscale) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DatiAnagrafici) {
		toSerialize["dati_anagrafici"] = o.DatiAnagrafici
	}
	return toSerialize, nil
}

type NullableRappresentanteFiscale struct {
	value *RappresentanteFiscale
	isSet bool
}

func (v NullableRappresentanteFiscale) Get() *RappresentanteFiscale {
	return v.value
}

func (v *NullableRappresentanteFiscale) Set(val *RappresentanteFiscale) {
	v.value = val
	v.isSet = true
}

func (v NullableRappresentanteFiscale) IsSet() bool {
	return v.isSet
}

func (v *NullableRappresentanteFiscale) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRappresentanteFiscale(val *RappresentanteFiscale) *NullableRappresentanteFiscale {
	return &NullableRappresentanteFiscale{value: val, isSet: true}
}

func (v NullableRappresentanteFiscale) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRappresentanteFiscale) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


