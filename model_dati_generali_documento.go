/*
Invoicetronic API

The [Invoicetronic API][2] is a RESTful service that allows you to send and receive invoices through the Italian [Servizio di Interscambio (SDI)][1], or Interchange Service. The API is designed to be simple and easy to use, abstracting away SDI complexity while providing complete control over the invoice send/receive process. It provides advanced features as encryption at rest, multi-language pre-flight invoice validation, multiple upload formats, webhooks, event logging, client SDKs, and CLI tools.  For more information, see  [Invoicetronic website][2]  [1]: https://www.fatturapa.gov.it/it/sistemainterscambio/cose-il-sdi/ [2]: https://invoicetronic.com/

API version: 1
Contact: info@invoicetronic.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package invoicetronicsdk

import (
	"encoding/json"
	"time"
)

// checks if the DatiGeneraliDocumento type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DatiGeneraliDocumento{}

// DatiGeneraliDocumento struct for DatiGeneraliDocumento
type DatiGeneraliDocumento struct {
	TipoDocumento NullableString `json:"tipo_documento,omitempty"`
	Divisa NullableString `json:"divisa,omitempty"`
	Data *time.Time `json:"data,omitempty"`
	Numero NullableString `json:"numero,omitempty"`
	DatiRitenuta []DatiRitenuta `json:"dati_ritenuta,omitempty"`
	DatiBollo *DatiBollo `json:"dati_bollo,omitempty"`
	DatiCassaPrevidenziale []DatiCassaPrevidenziale `json:"dati_cassa_previdenziale,omitempty"`
	ScontoMaggiorazione []ScontoMaggiorazione `json:"sconto_maggiorazione,omitempty"`
	ImportoTotaleDocumento NullableFloat64 `json:"importo_totale_documento,omitempty"`
	Arrotondamento NullableFloat64 `json:"arrotondamento,omitempty"`
	Causale []string `json:"causale,omitempty"`
	Art73 NullableString `json:"art73,omitempty"`
}

// NewDatiGeneraliDocumento instantiates a new DatiGeneraliDocumento object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDatiGeneraliDocumento() *DatiGeneraliDocumento {
	this := DatiGeneraliDocumento{}
	return &this
}

// NewDatiGeneraliDocumentoWithDefaults instantiates a new DatiGeneraliDocumento object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDatiGeneraliDocumentoWithDefaults() *DatiGeneraliDocumento {
	this := DatiGeneraliDocumento{}
	return &this
}

// GetTipoDocumento returns the TipoDocumento field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DatiGeneraliDocumento) GetTipoDocumento() string {
	if o == nil || IsNil(o.TipoDocumento.Get()) {
		var ret string
		return ret
	}
	return *o.TipoDocumento.Get()
}

// GetTipoDocumentoOk returns a tuple with the TipoDocumento field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DatiGeneraliDocumento) GetTipoDocumentoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TipoDocumento.Get(), o.TipoDocumento.IsSet()
}

// HasTipoDocumento returns a boolean if a field has been set.
func (o *DatiGeneraliDocumento) HasTipoDocumento() bool {
	if o != nil && o.TipoDocumento.IsSet() {
		return true
	}

	return false
}

// SetTipoDocumento gets a reference to the given NullableString and assigns it to the TipoDocumento field.
func (o *DatiGeneraliDocumento) SetTipoDocumento(v string) {
	o.TipoDocumento.Set(&v)
}
// SetTipoDocumentoNil sets the value for TipoDocumento to be an explicit nil
func (o *DatiGeneraliDocumento) SetTipoDocumentoNil() {
	o.TipoDocumento.Set(nil)
}

// UnsetTipoDocumento ensures that no value is present for TipoDocumento, not even an explicit nil
func (o *DatiGeneraliDocumento) UnsetTipoDocumento() {
	o.TipoDocumento.Unset()
}

// GetDivisa returns the Divisa field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DatiGeneraliDocumento) GetDivisa() string {
	if o == nil || IsNil(o.Divisa.Get()) {
		var ret string
		return ret
	}
	return *o.Divisa.Get()
}

// GetDivisaOk returns a tuple with the Divisa field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DatiGeneraliDocumento) GetDivisaOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Divisa.Get(), o.Divisa.IsSet()
}

// HasDivisa returns a boolean if a field has been set.
func (o *DatiGeneraliDocumento) HasDivisa() bool {
	if o != nil && o.Divisa.IsSet() {
		return true
	}

	return false
}

// SetDivisa gets a reference to the given NullableString and assigns it to the Divisa field.
func (o *DatiGeneraliDocumento) SetDivisa(v string) {
	o.Divisa.Set(&v)
}
// SetDivisaNil sets the value for Divisa to be an explicit nil
func (o *DatiGeneraliDocumento) SetDivisaNil() {
	o.Divisa.Set(nil)
}

// UnsetDivisa ensures that no value is present for Divisa, not even an explicit nil
func (o *DatiGeneraliDocumento) UnsetDivisa() {
	o.Divisa.Unset()
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *DatiGeneraliDocumento) GetData() time.Time {
	if o == nil || IsNil(o.Data) {
		var ret time.Time
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatiGeneraliDocumento) GetDataOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *DatiGeneraliDocumento) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given time.Time and assigns it to the Data field.
func (o *DatiGeneraliDocumento) SetData(v time.Time) {
	o.Data = &v
}

// GetNumero returns the Numero field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DatiGeneraliDocumento) GetNumero() string {
	if o == nil || IsNil(o.Numero.Get()) {
		var ret string
		return ret
	}
	return *o.Numero.Get()
}

// GetNumeroOk returns a tuple with the Numero field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DatiGeneraliDocumento) GetNumeroOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Numero.Get(), o.Numero.IsSet()
}

// HasNumero returns a boolean if a field has been set.
func (o *DatiGeneraliDocumento) HasNumero() bool {
	if o != nil && o.Numero.IsSet() {
		return true
	}

	return false
}

// SetNumero gets a reference to the given NullableString and assigns it to the Numero field.
func (o *DatiGeneraliDocumento) SetNumero(v string) {
	o.Numero.Set(&v)
}
// SetNumeroNil sets the value for Numero to be an explicit nil
func (o *DatiGeneraliDocumento) SetNumeroNil() {
	o.Numero.Set(nil)
}

// UnsetNumero ensures that no value is present for Numero, not even an explicit nil
func (o *DatiGeneraliDocumento) UnsetNumero() {
	o.Numero.Unset()
}

// GetDatiRitenuta returns the DatiRitenuta field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DatiGeneraliDocumento) GetDatiRitenuta() []DatiRitenuta {
	if o == nil {
		var ret []DatiRitenuta
		return ret
	}
	return o.DatiRitenuta
}

// GetDatiRitenutaOk returns a tuple with the DatiRitenuta field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DatiGeneraliDocumento) GetDatiRitenutaOk() ([]DatiRitenuta, bool) {
	if o == nil || IsNil(o.DatiRitenuta) {
		return nil, false
	}
	return o.DatiRitenuta, true
}

// HasDatiRitenuta returns a boolean if a field has been set.
func (o *DatiGeneraliDocumento) HasDatiRitenuta() bool {
	if o != nil && !IsNil(o.DatiRitenuta) {
		return true
	}

	return false
}

// SetDatiRitenuta gets a reference to the given []DatiRitenuta and assigns it to the DatiRitenuta field.
func (o *DatiGeneraliDocumento) SetDatiRitenuta(v []DatiRitenuta) {
	o.DatiRitenuta = v
}

// GetDatiBollo returns the DatiBollo field value if set, zero value otherwise.
func (o *DatiGeneraliDocumento) GetDatiBollo() DatiBollo {
	if o == nil || IsNil(o.DatiBollo) {
		var ret DatiBollo
		return ret
	}
	return *o.DatiBollo
}

// GetDatiBolloOk returns a tuple with the DatiBollo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatiGeneraliDocumento) GetDatiBolloOk() (*DatiBollo, bool) {
	if o == nil || IsNil(o.DatiBollo) {
		return nil, false
	}
	return o.DatiBollo, true
}

// HasDatiBollo returns a boolean if a field has been set.
func (o *DatiGeneraliDocumento) HasDatiBollo() bool {
	if o != nil && !IsNil(o.DatiBollo) {
		return true
	}

	return false
}

// SetDatiBollo gets a reference to the given DatiBollo and assigns it to the DatiBollo field.
func (o *DatiGeneraliDocumento) SetDatiBollo(v DatiBollo) {
	o.DatiBollo = &v
}

// GetDatiCassaPrevidenziale returns the DatiCassaPrevidenziale field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DatiGeneraliDocumento) GetDatiCassaPrevidenziale() []DatiCassaPrevidenziale {
	if o == nil {
		var ret []DatiCassaPrevidenziale
		return ret
	}
	return o.DatiCassaPrevidenziale
}

// GetDatiCassaPrevidenzialeOk returns a tuple with the DatiCassaPrevidenziale field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DatiGeneraliDocumento) GetDatiCassaPrevidenzialeOk() ([]DatiCassaPrevidenziale, bool) {
	if o == nil || IsNil(o.DatiCassaPrevidenziale) {
		return nil, false
	}
	return o.DatiCassaPrevidenziale, true
}

// HasDatiCassaPrevidenziale returns a boolean if a field has been set.
func (o *DatiGeneraliDocumento) HasDatiCassaPrevidenziale() bool {
	if o != nil && !IsNil(o.DatiCassaPrevidenziale) {
		return true
	}

	return false
}

// SetDatiCassaPrevidenziale gets a reference to the given []DatiCassaPrevidenziale and assigns it to the DatiCassaPrevidenziale field.
func (o *DatiGeneraliDocumento) SetDatiCassaPrevidenziale(v []DatiCassaPrevidenziale) {
	o.DatiCassaPrevidenziale = v
}

// GetScontoMaggiorazione returns the ScontoMaggiorazione field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DatiGeneraliDocumento) GetScontoMaggiorazione() []ScontoMaggiorazione {
	if o == nil {
		var ret []ScontoMaggiorazione
		return ret
	}
	return o.ScontoMaggiorazione
}

// GetScontoMaggiorazioneOk returns a tuple with the ScontoMaggiorazione field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DatiGeneraliDocumento) GetScontoMaggiorazioneOk() ([]ScontoMaggiorazione, bool) {
	if o == nil || IsNil(o.ScontoMaggiorazione) {
		return nil, false
	}
	return o.ScontoMaggiorazione, true
}

// HasScontoMaggiorazione returns a boolean if a field has been set.
func (o *DatiGeneraliDocumento) HasScontoMaggiorazione() bool {
	if o != nil && !IsNil(o.ScontoMaggiorazione) {
		return true
	}

	return false
}

// SetScontoMaggiorazione gets a reference to the given []ScontoMaggiorazione and assigns it to the ScontoMaggiorazione field.
func (o *DatiGeneraliDocumento) SetScontoMaggiorazione(v []ScontoMaggiorazione) {
	o.ScontoMaggiorazione = v
}

// GetImportoTotaleDocumento returns the ImportoTotaleDocumento field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DatiGeneraliDocumento) GetImportoTotaleDocumento() float64 {
	if o == nil || IsNil(o.ImportoTotaleDocumento.Get()) {
		var ret float64
		return ret
	}
	return *o.ImportoTotaleDocumento.Get()
}

// GetImportoTotaleDocumentoOk returns a tuple with the ImportoTotaleDocumento field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DatiGeneraliDocumento) GetImportoTotaleDocumentoOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ImportoTotaleDocumento.Get(), o.ImportoTotaleDocumento.IsSet()
}

// HasImportoTotaleDocumento returns a boolean if a field has been set.
func (o *DatiGeneraliDocumento) HasImportoTotaleDocumento() bool {
	if o != nil && o.ImportoTotaleDocumento.IsSet() {
		return true
	}

	return false
}

// SetImportoTotaleDocumento gets a reference to the given NullableFloat64 and assigns it to the ImportoTotaleDocumento field.
func (o *DatiGeneraliDocumento) SetImportoTotaleDocumento(v float64) {
	o.ImportoTotaleDocumento.Set(&v)
}
// SetImportoTotaleDocumentoNil sets the value for ImportoTotaleDocumento to be an explicit nil
func (o *DatiGeneraliDocumento) SetImportoTotaleDocumentoNil() {
	o.ImportoTotaleDocumento.Set(nil)
}

// UnsetImportoTotaleDocumento ensures that no value is present for ImportoTotaleDocumento, not even an explicit nil
func (o *DatiGeneraliDocumento) UnsetImportoTotaleDocumento() {
	o.ImportoTotaleDocumento.Unset()
}

// GetArrotondamento returns the Arrotondamento field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DatiGeneraliDocumento) GetArrotondamento() float64 {
	if o == nil || IsNil(o.Arrotondamento.Get()) {
		var ret float64
		return ret
	}
	return *o.Arrotondamento.Get()
}

// GetArrotondamentoOk returns a tuple with the Arrotondamento field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DatiGeneraliDocumento) GetArrotondamentoOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Arrotondamento.Get(), o.Arrotondamento.IsSet()
}

// HasArrotondamento returns a boolean if a field has been set.
func (o *DatiGeneraliDocumento) HasArrotondamento() bool {
	if o != nil && o.Arrotondamento.IsSet() {
		return true
	}

	return false
}

// SetArrotondamento gets a reference to the given NullableFloat64 and assigns it to the Arrotondamento field.
func (o *DatiGeneraliDocumento) SetArrotondamento(v float64) {
	o.Arrotondamento.Set(&v)
}
// SetArrotondamentoNil sets the value for Arrotondamento to be an explicit nil
func (o *DatiGeneraliDocumento) SetArrotondamentoNil() {
	o.Arrotondamento.Set(nil)
}

// UnsetArrotondamento ensures that no value is present for Arrotondamento, not even an explicit nil
func (o *DatiGeneraliDocumento) UnsetArrotondamento() {
	o.Arrotondamento.Unset()
}

// GetCausale returns the Causale field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DatiGeneraliDocumento) GetCausale() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Causale
}

// GetCausaleOk returns a tuple with the Causale field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DatiGeneraliDocumento) GetCausaleOk() ([]string, bool) {
	if o == nil || IsNil(o.Causale) {
		return nil, false
	}
	return o.Causale, true
}

// HasCausale returns a boolean if a field has been set.
func (o *DatiGeneraliDocumento) HasCausale() bool {
	if o != nil && !IsNil(o.Causale) {
		return true
	}

	return false
}

// SetCausale gets a reference to the given []string and assigns it to the Causale field.
func (o *DatiGeneraliDocumento) SetCausale(v []string) {
	o.Causale = v
}

// GetArt73 returns the Art73 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DatiGeneraliDocumento) GetArt73() string {
	if o == nil || IsNil(o.Art73.Get()) {
		var ret string
		return ret
	}
	return *o.Art73.Get()
}

// GetArt73Ok returns a tuple with the Art73 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DatiGeneraliDocumento) GetArt73Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Art73.Get(), o.Art73.IsSet()
}

// HasArt73 returns a boolean if a field has been set.
func (o *DatiGeneraliDocumento) HasArt73() bool {
	if o != nil && o.Art73.IsSet() {
		return true
	}

	return false
}

// SetArt73 gets a reference to the given NullableString and assigns it to the Art73 field.
func (o *DatiGeneraliDocumento) SetArt73(v string) {
	o.Art73.Set(&v)
}
// SetArt73Nil sets the value for Art73 to be an explicit nil
func (o *DatiGeneraliDocumento) SetArt73Nil() {
	o.Art73.Set(nil)
}

// UnsetArt73 ensures that no value is present for Art73, not even an explicit nil
func (o *DatiGeneraliDocumento) UnsetArt73() {
	o.Art73.Unset()
}

func (o DatiGeneraliDocumento) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DatiGeneraliDocumento) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.TipoDocumento.IsSet() {
		toSerialize["tipo_documento"] = o.TipoDocumento.Get()
	}
	if o.Divisa.IsSet() {
		toSerialize["divisa"] = o.Divisa.Get()
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if o.Numero.IsSet() {
		toSerialize["numero"] = o.Numero.Get()
	}
	if o.DatiRitenuta != nil {
		toSerialize["dati_ritenuta"] = o.DatiRitenuta
	}
	if !IsNil(o.DatiBollo) {
		toSerialize["dati_bollo"] = o.DatiBollo
	}
	if o.DatiCassaPrevidenziale != nil {
		toSerialize["dati_cassa_previdenziale"] = o.DatiCassaPrevidenziale
	}
	if o.ScontoMaggiorazione != nil {
		toSerialize["sconto_maggiorazione"] = o.ScontoMaggiorazione
	}
	if o.ImportoTotaleDocumento.IsSet() {
		toSerialize["importo_totale_documento"] = o.ImportoTotaleDocumento.Get()
	}
	if o.Arrotondamento.IsSet() {
		toSerialize["arrotondamento"] = o.Arrotondamento.Get()
	}
	if o.Causale != nil {
		toSerialize["causale"] = o.Causale
	}
	if o.Art73.IsSet() {
		toSerialize["art73"] = o.Art73.Get()
	}
	return toSerialize, nil
}

type NullableDatiGeneraliDocumento struct {
	value *DatiGeneraliDocumento
	isSet bool
}

func (v NullableDatiGeneraliDocumento) Get() *DatiGeneraliDocumento {
	return v.value
}

func (v *NullableDatiGeneraliDocumento) Set(val *DatiGeneraliDocumento) {
	v.value = val
	v.isSet = true
}

func (v NullableDatiGeneraliDocumento) IsSet() bool {
	return v.isSet
}

func (v *NullableDatiGeneraliDocumento) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDatiGeneraliDocumento(val *DatiGeneraliDocumento) *NullableDatiGeneraliDocumento {
	return &NullableDatiGeneraliDocumento{value: val, isSet: true}
}

func (v NullableDatiGeneraliDocumento) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDatiGeneraliDocumento) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


