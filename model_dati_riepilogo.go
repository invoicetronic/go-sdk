/*
Italian eInvoice API v1

The [Italian eInvoice API][2] is a RESTful API that allows you to send and receive invoices through the Italian [Servizio di Interscambio (SDI)][1], or Interchange Service. The API is designed by Invoicetronic to be simple and easy to use, abstracting away SDI complexity while providing complete control over the invoice send/receive process. The API also provides advanced features as encryption at rest, invoice validation, multiple upload formats, webhooks, event logging, client SDKs for commonly used languages, and CLI tools.  For more information, see  [Invoicetronic website][2]  [1]: https://www.fatturapa.gov.it/it/sistemainterscambio/cose-il-sdi/ [2]: https://invoicetronic.com/

API version: 1
Contact: support@invoicetronic.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package invoicesdk

import (
	"encoding/json"
)

// checks if the DatiRiepilogo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DatiRiepilogo{}

// DatiRiepilogo struct for DatiRiepilogo
type DatiRiepilogo struct {
	AliquotaIva *float64 `json:"aliquota_iva,omitempty"`
	Natura NullableString `json:"natura,omitempty"`
	SpeseAccessorie NullableFloat64 `json:"spese_accessorie,omitempty"`
	Arrotondamento NullableFloat64 `json:"arrotondamento,omitempty"`
	ImponibileImporto *float64 `json:"imponibile_importo,omitempty"`
	Imposta *float64 `json:"imposta,omitempty"`
	EsigibilitaIva NullableString `json:"esigibilita_iva,omitempty"`
	RiferimentoNormativo NullableString `json:"riferimento_normativo,omitempty"`
}

// NewDatiRiepilogo instantiates a new DatiRiepilogo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDatiRiepilogo() *DatiRiepilogo {
	this := DatiRiepilogo{}
	return &this
}

// NewDatiRiepilogoWithDefaults instantiates a new DatiRiepilogo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDatiRiepilogoWithDefaults() *DatiRiepilogo {
	this := DatiRiepilogo{}
	return &this
}

// GetAliquotaIva returns the AliquotaIva field value if set, zero value otherwise.
func (o *DatiRiepilogo) GetAliquotaIva() float64 {
	if o == nil || IsNil(o.AliquotaIva) {
		var ret float64
		return ret
	}
	return *o.AliquotaIva
}

// GetAliquotaIvaOk returns a tuple with the AliquotaIva field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatiRiepilogo) GetAliquotaIvaOk() (*float64, bool) {
	if o == nil || IsNil(o.AliquotaIva) {
		return nil, false
	}
	return o.AliquotaIva, true
}

// HasAliquotaIva returns a boolean if a field has been set.
func (o *DatiRiepilogo) HasAliquotaIva() bool {
	if o != nil && !IsNil(o.AliquotaIva) {
		return true
	}

	return false
}

// SetAliquotaIva gets a reference to the given float64 and assigns it to the AliquotaIva field.
func (o *DatiRiepilogo) SetAliquotaIva(v float64) {
	o.AliquotaIva = &v
}

// GetNatura returns the Natura field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DatiRiepilogo) GetNatura() string {
	if o == nil || IsNil(o.Natura.Get()) {
		var ret string
		return ret
	}
	return *o.Natura.Get()
}

// GetNaturaOk returns a tuple with the Natura field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DatiRiepilogo) GetNaturaOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Natura.Get(), o.Natura.IsSet()
}

// HasNatura returns a boolean if a field has been set.
func (o *DatiRiepilogo) HasNatura() bool {
	if o != nil && o.Natura.IsSet() {
		return true
	}

	return false
}

// SetNatura gets a reference to the given NullableString and assigns it to the Natura field.
func (o *DatiRiepilogo) SetNatura(v string) {
	o.Natura.Set(&v)
}
// SetNaturaNil sets the value for Natura to be an explicit nil
func (o *DatiRiepilogo) SetNaturaNil() {
	o.Natura.Set(nil)
}

// UnsetNatura ensures that no value is present for Natura, not even an explicit nil
func (o *DatiRiepilogo) UnsetNatura() {
	o.Natura.Unset()
}

// GetSpeseAccessorie returns the SpeseAccessorie field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DatiRiepilogo) GetSpeseAccessorie() float64 {
	if o == nil || IsNil(o.SpeseAccessorie.Get()) {
		var ret float64
		return ret
	}
	return *o.SpeseAccessorie.Get()
}

// GetSpeseAccessorieOk returns a tuple with the SpeseAccessorie field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DatiRiepilogo) GetSpeseAccessorieOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.SpeseAccessorie.Get(), o.SpeseAccessorie.IsSet()
}

// HasSpeseAccessorie returns a boolean if a field has been set.
func (o *DatiRiepilogo) HasSpeseAccessorie() bool {
	if o != nil && o.SpeseAccessorie.IsSet() {
		return true
	}

	return false
}

// SetSpeseAccessorie gets a reference to the given NullableFloat64 and assigns it to the SpeseAccessorie field.
func (o *DatiRiepilogo) SetSpeseAccessorie(v float64) {
	o.SpeseAccessorie.Set(&v)
}
// SetSpeseAccessorieNil sets the value for SpeseAccessorie to be an explicit nil
func (o *DatiRiepilogo) SetSpeseAccessorieNil() {
	o.SpeseAccessorie.Set(nil)
}

// UnsetSpeseAccessorie ensures that no value is present for SpeseAccessorie, not even an explicit nil
func (o *DatiRiepilogo) UnsetSpeseAccessorie() {
	o.SpeseAccessorie.Unset()
}

// GetArrotondamento returns the Arrotondamento field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DatiRiepilogo) GetArrotondamento() float64 {
	if o == nil || IsNil(o.Arrotondamento.Get()) {
		var ret float64
		return ret
	}
	return *o.Arrotondamento.Get()
}

// GetArrotondamentoOk returns a tuple with the Arrotondamento field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DatiRiepilogo) GetArrotondamentoOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Arrotondamento.Get(), o.Arrotondamento.IsSet()
}

// HasArrotondamento returns a boolean if a field has been set.
func (o *DatiRiepilogo) HasArrotondamento() bool {
	if o != nil && o.Arrotondamento.IsSet() {
		return true
	}

	return false
}

// SetArrotondamento gets a reference to the given NullableFloat64 and assigns it to the Arrotondamento field.
func (o *DatiRiepilogo) SetArrotondamento(v float64) {
	o.Arrotondamento.Set(&v)
}
// SetArrotondamentoNil sets the value for Arrotondamento to be an explicit nil
func (o *DatiRiepilogo) SetArrotondamentoNil() {
	o.Arrotondamento.Set(nil)
}

// UnsetArrotondamento ensures that no value is present for Arrotondamento, not even an explicit nil
func (o *DatiRiepilogo) UnsetArrotondamento() {
	o.Arrotondamento.Unset()
}

// GetImponibileImporto returns the ImponibileImporto field value if set, zero value otherwise.
func (o *DatiRiepilogo) GetImponibileImporto() float64 {
	if o == nil || IsNil(o.ImponibileImporto) {
		var ret float64
		return ret
	}
	return *o.ImponibileImporto
}

// GetImponibileImportoOk returns a tuple with the ImponibileImporto field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatiRiepilogo) GetImponibileImportoOk() (*float64, bool) {
	if o == nil || IsNil(o.ImponibileImporto) {
		return nil, false
	}
	return o.ImponibileImporto, true
}

// HasImponibileImporto returns a boolean if a field has been set.
func (o *DatiRiepilogo) HasImponibileImporto() bool {
	if o != nil && !IsNil(o.ImponibileImporto) {
		return true
	}

	return false
}

// SetImponibileImporto gets a reference to the given float64 and assigns it to the ImponibileImporto field.
func (o *DatiRiepilogo) SetImponibileImporto(v float64) {
	o.ImponibileImporto = &v
}

// GetImposta returns the Imposta field value if set, zero value otherwise.
func (o *DatiRiepilogo) GetImposta() float64 {
	if o == nil || IsNil(o.Imposta) {
		var ret float64
		return ret
	}
	return *o.Imposta
}

// GetImpostaOk returns a tuple with the Imposta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatiRiepilogo) GetImpostaOk() (*float64, bool) {
	if o == nil || IsNil(o.Imposta) {
		return nil, false
	}
	return o.Imposta, true
}

// HasImposta returns a boolean if a field has been set.
func (o *DatiRiepilogo) HasImposta() bool {
	if o != nil && !IsNil(o.Imposta) {
		return true
	}

	return false
}

// SetImposta gets a reference to the given float64 and assigns it to the Imposta field.
func (o *DatiRiepilogo) SetImposta(v float64) {
	o.Imposta = &v
}

// GetEsigibilitaIva returns the EsigibilitaIva field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DatiRiepilogo) GetEsigibilitaIva() string {
	if o == nil || IsNil(o.EsigibilitaIva.Get()) {
		var ret string
		return ret
	}
	return *o.EsigibilitaIva.Get()
}

// GetEsigibilitaIvaOk returns a tuple with the EsigibilitaIva field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DatiRiepilogo) GetEsigibilitaIvaOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EsigibilitaIva.Get(), o.EsigibilitaIva.IsSet()
}

// HasEsigibilitaIva returns a boolean if a field has been set.
func (o *DatiRiepilogo) HasEsigibilitaIva() bool {
	if o != nil && o.EsigibilitaIva.IsSet() {
		return true
	}

	return false
}

// SetEsigibilitaIva gets a reference to the given NullableString and assigns it to the EsigibilitaIva field.
func (o *DatiRiepilogo) SetEsigibilitaIva(v string) {
	o.EsigibilitaIva.Set(&v)
}
// SetEsigibilitaIvaNil sets the value for EsigibilitaIva to be an explicit nil
func (o *DatiRiepilogo) SetEsigibilitaIvaNil() {
	o.EsigibilitaIva.Set(nil)
}

// UnsetEsigibilitaIva ensures that no value is present for EsigibilitaIva, not even an explicit nil
func (o *DatiRiepilogo) UnsetEsigibilitaIva() {
	o.EsigibilitaIva.Unset()
}

// GetRiferimentoNormativo returns the RiferimentoNormativo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DatiRiepilogo) GetRiferimentoNormativo() string {
	if o == nil || IsNil(o.RiferimentoNormativo.Get()) {
		var ret string
		return ret
	}
	return *o.RiferimentoNormativo.Get()
}

// GetRiferimentoNormativoOk returns a tuple with the RiferimentoNormativo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DatiRiepilogo) GetRiferimentoNormativoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RiferimentoNormativo.Get(), o.RiferimentoNormativo.IsSet()
}

// HasRiferimentoNormativo returns a boolean if a field has been set.
func (o *DatiRiepilogo) HasRiferimentoNormativo() bool {
	if o != nil && o.RiferimentoNormativo.IsSet() {
		return true
	}

	return false
}

// SetRiferimentoNormativo gets a reference to the given NullableString and assigns it to the RiferimentoNormativo field.
func (o *DatiRiepilogo) SetRiferimentoNormativo(v string) {
	o.RiferimentoNormativo.Set(&v)
}
// SetRiferimentoNormativoNil sets the value for RiferimentoNormativo to be an explicit nil
func (o *DatiRiepilogo) SetRiferimentoNormativoNil() {
	o.RiferimentoNormativo.Set(nil)
}

// UnsetRiferimentoNormativo ensures that no value is present for RiferimentoNormativo, not even an explicit nil
func (o *DatiRiepilogo) UnsetRiferimentoNormativo() {
	o.RiferimentoNormativo.Unset()
}

func (o DatiRiepilogo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DatiRiepilogo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AliquotaIva) {
		toSerialize["aliquota_iva"] = o.AliquotaIva
	}
	if o.Natura.IsSet() {
		toSerialize["natura"] = o.Natura.Get()
	}
	if o.SpeseAccessorie.IsSet() {
		toSerialize["spese_accessorie"] = o.SpeseAccessorie.Get()
	}
	if o.Arrotondamento.IsSet() {
		toSerialize["arrotondamento"] = o.Arrotondamento.Get()
	}
	if !IsNil(o.ImponibileImporto) {
		toSerialize["imponibile_importo"] = o.ImponibileImporto
	}
	if !IsNil(o.Imposta) {
		toSerialize["imposta"] = o.Imposta
	}
	if o.EsigibilitaIva.IsSet() {
		toSerialize["esigibilita_iva"] = o.EsigibilitaIva.Get()
	}
	if o.RiferimentoNormativo.IsSet() {
		toSerialize["riferimento_normativo"] = o.RiferimentoNormativo.Get()
	}
	return toSerialize, nil
}

type NullableDatiRiepilogo struct {
	value *DatiRiepilogo
	isSet bool
}

func (v NullableDatiRiepilogo) Get() *DatiRiepilogo {
	return v.value
}

func (v *NullableDatiRiepilogo) Set(val *DatiRiepilogo) {
	v.value = val
	v.isSet = true
}

func (v NullableDatiRiepilogo) IsSet() bool {
	return v.isSet
}

func (v *NullableDatiRiepilogo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDatiRiepilogo(val *DatiRiepilogo) *NullableDatiRiepilogo {
	return &NullableDatiRiepilogo{value: val, isSet: true}
}

func (v NullableDatiRiepilogo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDatiRiepilogo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


