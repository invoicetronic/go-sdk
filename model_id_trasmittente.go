/*
Invoicetronic API

The [Invoicetronic API][2] is a RESTful service that allows you to send and receive invoices through the Italian [Servizio di Interscambio (SDI)][1], or Interchange Service. The API is designed to be simple and easy to use, abstracting away SDI complexity while providing complete control over the invoice send/receive process. It provides advanced features as encryption at rest, multi-language pre-flight invoice validation, multiple upload formats, webhooks, event logging, client SDKs, and CLI tools.  For more information, see  [Invoicetronic website][2]  [1]: https://www.fatturapa.gov.it/it/sistemainterscambio/cose-il-sdi/ [2]: https://invoicetronic.com/

API version: 1
Contact: info@invoicetronic.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package invoicetronicsdk

import (
	"encoding/json"
)

// checks if the IdTrasmittente type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IdTrasmittente{}

// IdTrasmittente struct for IdTrasmittente
type IdTrasmittente struct {
	IdPaese NullableString `json:"id_paese,omitempty"`
	IdCodice NullableString `json:"id_codice,omitempty"`
}

// NewIdTrasmittente instantiates a new IdTrasmittente object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdTrasmittente() *IdTrasmittente {
	this := IdTrasmittente{}
	return &this
}

// NewIdTrasmittenteWithDefaults instantiates a new IdTrasmittente object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdTrasmittenteWithDefaults() *IdTrasmittente {
	this := IdTrasmittente{}
	return &this
}

// GetIdPaese returns the IdPaese field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IdTrasmittente) GetIdPaese() string {
	if o == nil || IsNil(o.IdPaese.Get()) {
		var ret string
		return ret
	}
	return *o.IdPaese.Get()
}

// GetIdPaeseOk returns a tuple with the IdPaese field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IdTrasmittente) GetIdPaeseOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IdPaese.Get(), o.IdPaese.IsSet()
}

// HasIdPaese returns a boolean if a field has been set.
func (o *IdTrasmittente) HasIdPaese() bool {
	if o != nil && o.IdPaese.IsSet() {
		return true
	}

	return false
}

// SetIdPaese gets a reference to the given NullableString and assigns it to the IdPaese field.
func (o *IdTrasmittente) SetIdPaese(v string) {
	o.IdPaese.Set(&v)
}
// SetIdPaeseNil sets the value for IdPaese to be an explicit nil
func (o *IdTrasmittente) SetIdPaeseNil() {
	o.IdPaese.Set(nil)
}

// UnsetIdPaese ensures that no value is present for IdPaese, not even an explicit nil
func (o *IdTrasmittente) UnsetIdPaese() {
	o.IdPaese.Unset()
}

// GetIdCodice returns the IdCodice field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IdTrasmittente) GetIdCodice() string {
	if o == nil || IsNil(o.IdCodice.Get()) {
		var ret string
		return ret
	}
	return *o.IdCodice.Get()
}

// GetIdCodiceOk returns a tuple with the IdCodice field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IdTrasmittente) GetIdCodiceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IdCodice.Get(), o.IdCodice.IsSet()
}

// HasIdCodice returns a boolean if a field has been set.
func (o *IdTrasmittente) HasIdCodice() bool {
	if o != nil && o.IdCodice.IsSet() {
		return true
	}

	return false
}

// SetIdCodice gets a reference to the given NullableString and assigns it to the IdCodice field.
func (o *IdTrasmittente) SetIdCodice(v string) {
	o.IdCodice.Set(&v)
}
// SetIdCodiceNil sets the value for IdCodice to be an explicit nil
func (o *IdTrasmittente) SetIdCodiceNil() {
	o.IdCodice.Set(nil)
}

// UnsetIdCodice ensures that no value is present for IdCodice, not even an explicit nil
func (o *IdTrasmittente) UnsetIdCodice() {
	o.IdCodice.Unset()
}

func (o IdTrasmittente) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IdTrasmittente) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.IdPaese.IsSet() {
		toSerialize["id_paese"] = o.IdPaese.Get()
	}
	if o.IdCodice.IsSet() {
		toSerialize["id_codice"] = o.IdCodice.Get()
	}
	return toSerialize, nil
}

type NullableIdTrasmittente struct {
	value *IdTrasmittente
	isSet bool
}

func (v NullableIdTrasmittente) Get() *IdTrasmittente {
	return v.value
}

func (v *NullableIdTrasmittente) Set(val *IdTrasmittente) {
	v.value = val
	v.isSet = true
}

func (v NullableIdTrasmittente) IsSet() bool {
	return v.isSet
}

func (v *NullableIdTrasmittente) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdTrasmittente(val *IdTrasmittente) *NullableIdTrasmittente {
	return &NullableIdTrasmittente{value: val, isSet: true}
}

func (v NullableIdTrasmittente) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdTrasmittente) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


